/*! Image Map Resizer (imageMapResizer.min.js )
 *  Desc: Resize HTML imageMap to scaled image and translate for object-fit: cover
 *  Copyright: (c) 2016 David J. Bradshaw - dave@bradshaw.net
 *  Updated by Brian Smith
 *  License: MIT
 */

!function(){"use strict";function a(){function a(){function a(a,b){function c(a){var b=1===(g=1-g)?"width":"height";return Math.floor(Number(a)-d[b])}function f(a){var b=1===(g=1-g)?"width":"height";return Math.floor(Number(a)*e[b])}var g=0;i[b].coords=a.split(",").map(c).map(f).join(",")}k.croppedWidth=k.naturalWidth,k.croppedHeight=k.naturalHeight;var b=k.width/k.height,c=k.naturalWidth/k.naturalHeight;b>c?k.croppedHeight=k.naturalWidth/k.width*k.height:b<c&&(k.croppedWidth=k.naturalHeight/k.height*k.width);var d={width:(k.naturalWidth-k.croppedWidth)/2,height:(k.naturalHeight-k.croppedHeight)/2},e={width:k.width/k.croppedWidth,height:k.height/k.croppedHeight};j.forEach(a)}function b(a){return a.coords.replace(/ *, */g,",").replace(/ +/g,",")}function c(){clearTimeout(l),l=setTimeout(a,250)}function d(){k.width===k.naturalWidth&&k.height===k.naturalHeight||a()}function e(){k.addEventListener("load",a,!1),window.addEventListener("focus",a,!1),window.addEventListener("resize",c,!1),window.addEventListener("readystatechange",a,!1),document.addEventListener("fullscreenchange",a,!1)}function f(){return"function"==typeof h._resize}function g(){i=h.getElementsByTagName("area"),j=Array.prototype.map.call(i,b),k=document.querySelector('img[usemap="#'+h.name+'"]'),h._resize=a}var h=this,i=null,j=null,k=null,l=null;f()?h._resize():(g(),e(),d())}function b(){function b(a){if(!a.tagName)throw new TypeError("Object is not a valid DOM element");if("MAP"!==a.tagName.toUpperCase())throw new TypeError("Expected <MAP> tag, found <"+a.tagName+">.")}function c(c){c&&(b(c),a.call(c),d.push(c))}var d;return function(b){switch(d=[],typeof b){case"undefined":case"string":Array.prototype.forEach.call(document.querySelectorAll(b||"map"),c);break;case"object":c(b);break;default:throw new TypeError("Unexpected data type ("+typeof b+").")}return d}}"function"==typeof define&&define.amd?define([],b):"object"==typeof module&&"object"==typeof module.exports?module.exports=b():window.imageMapResize=b(),"jQuery"in window&&(jQuery.fn.imageMapResize=function(){return this.filter("map").each(a).end()})}();